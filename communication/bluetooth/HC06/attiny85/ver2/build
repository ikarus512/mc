 f=main
#t=13   ; mcu=attiny${t}a ; F_CPU=1000000
#t=2313 ; mcu=attiny${t}a ; F_CPU=14666667
#t=85   ; mcu=attiny${t}  ; F_CPU=8000000
#t=85   ; mcu=attiny${t}  ; F_CPU=1000000
 t=45   ; mcu=attiny${t}  ; F_CPU=8000000

clear
rm -fr *.o *.elf *.hex

### compile, build, convert
avr-gcc -g -Wall -std=gnu99 -Os -mmcu=$mcu -c $f.c usiuartx.c -DF_CPU=$F_CPU -I. || exit 1
avr-gcc -g                    -mmcu=$mcu    *.o -o $f.elf                    || exit 1
avr-objcopy -j .text -j .data -O ihex $f.elf $f.hex                          || exit 1
avr-size -C --mcu=$mcu $f.elf                                                || exit 1

#exit

### open usb port to not let arduino reset during programming
if [ ! -e /dev/ttyUSB0 ];then exit 1; fi
(python3 -c "import time; f=open('/dev/ttyUSB0'); SECs=20; time.sleep(SECs);" &);ps; sleep 2s

### programming
#sudo avrdude -c usbasp -p t$t                          -u -U flash:w:$f.hex
      avrdude -c avrisp -p t$t -P /dev/ttyUSB0 -b 19200 -u -U flash:w:$f.hex
ls -l *.hex
rm -frv *.hex *.o *.elf
